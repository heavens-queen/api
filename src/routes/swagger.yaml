openapi: 3.0.0
info:
  title: MediaGlens
  version: 1.0.0
  description: |
    MediaGlens API offers a powerful suite of features to enhance and optimize your media assets. Developers can take advantage of the following functionalities:

    - **Image Optimization and Customization:** Seamlessly optimize and customize images to meet specific requirements. Adjust dimensions, quality, and format effortlessly.

    - **File Compression and Storage:** Compress and store various file types, including images, documents (docx, pdfs, ppts, xls), and more. Save storage space while maintaining content integrity.

    - **Efficient Image Processing:** Perform complex image processing tasks, including cropping, rotating, and converting to grayscale. Achieve the desired visual output with ease.

    - **Secure Storage:** Utilize secure storage options, with support for images and files. Store, retrieve, and manage media assets securely.

    - **Streamlined Integration:** Integrate seamlessly with your applications and services. Our API is designed for easy integration, providing a smooth experience for developers.

    Whether you are working with images or various file formats, MediaGlens empowers developers to optimize, compress, and manage media content efficiently. Explore the comprehensive set of features for a seamless media processing experience.
servers:
  - url: "http://localhost:8080"
tags:
  - name: IMAGES UPLOAD
    description: Operations related to uploading images
paths:
  /api/delete-images/:
    delete:
      tags:
        - IMAGES DELETE
      summary: Delete images
      description: Delete images from the server. Requires user authentication and images keys obtained during image uploads.
      security:
        - ApiKeyAuth: []
        - UserIdAuth: []
      parameters:
        - in: header
          name: x-api-key
          description: API key
          required: true
        - in: header
          name: x-user-id
          description: User ID
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                  description: Array of image keys obtained during image uploads.
      responses:
        "200":
          description: Images deleted successfully
        "400":
          description: Bad Request. Indicates invalid parameters.
          content:
            application/json:
              example:
                message: "Invalid parameters. Provide valid values for images."
        "401":
          description: Unauthorized. Indicates missing or invalid API key or user ID.
          content:
            application/json:
              example:
                message: "Invalid API key or user ID. Please provide valid credentials."
        "404":
          description: Not Found. Indicates the endpoint is not found.
          content:
            application/json:
              example:
                message: "Endpoint not found."
        "500":
          description: Internal Server Error. Indicates a server error.
          content:
            application/json:
              example:
                message: "Internal Server Error. Please try again later."
# delte
# Path: src/routes/swagger.yaml

